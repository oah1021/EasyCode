buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        google()
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/releases" }
        maven { url "https://maven.aliyun.com/repository/snapshots" }
        maven { url "https://maven.aliyun.com/repository/grails-core" }
        maven { url "https://maven.aliyun.com/repository/mapr-public" }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    }
}

//2.1 插件配置
// 这两个插件是必备
plugins {
    id 'java'
    // 现在的核心版本：https://lp.jetbrains.com/gradle-intellij-plugin/
    // 如何从 0.x 升级到 1.x
    id 'org.jetbrains.intellij' version '1.15.0'
    id 'org.jetbrains.changelog' version "2.2.0"
}


group 'com.sjhy'
version '1.2.8-java.RELEASE'

// 限制jdk的使用版本号，这里限制到8，表示生成的idea插件只能运行在jdk8以上的环境中
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

// 官方sdk插件开发教程 http://www.jetbrains.org/intellij/sdk/docs/tutorials/build_system/prerequisites.html
// 官网gradle构建教程 https://plugins.jetbrains.com/docs/intellij/gradle-guide.html

intellij {
//    插件名称
//    pluginName("EasyCode")
    setPluginName("EasyCode")
//    pluginName 'EasyCode'
    // 开发环境运行时使用的版本
    setVersion('2022.3.3')
    // 社区版
//    type 'IC'
    // 企业版
    type.set('IU')
//    setType('IU')
    // 各种IDEA版本去这里找
    // https://www.jetbrains.com/intellij-repository/releases
    // 依赖的插件

    plugins = [
            'com.intellij.java',
            'com.intellij.database',
            "org.intellij.intelliLang",
//            "org.jetbrains.kotlin",
            "com.intellij.properties"]
    // Disables updating since-build attribute in plugin.xml
    updateSinceUntilBuild.set(false)
    downloadSources.set(true)
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework/spring-expression
    implementation "org.springframework:spring-expression:5.3.24"
    implementation("org.reflections:reflections:0.10.2") {
        // https://cloud.tencent.com/developer/ask/sof/107326615
        exclude(group : "org.slf4j")
    }
    testCompileOnly("com.alibaba:fastjson:1.2.83")
    // jackson工具
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
    // guava工具
//    compile 'com.google.guava:guava:29.0-jre'
    // velocity支持
//    compile 'org.apache.velocity:velocity:1.7'
    // groovy支持
//    compile 'org.codehaus.groovy:groovy:3.0.2'
    // beetl支持
//    compile 'com.ibeetl:beetl:3.3.0.RELEASE'
    // freemarker支持
//    compile 'org.freemarker:freemarker:2.3.30'
    // lombok 支持
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    // 测试用例
    testImplementation 'junit:junit:4.12'
}

